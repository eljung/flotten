version: "3.8"

services:
  ef2in:
    build:
      context: ./ef2in
      dockerfile: Dockerfile
    container_name: ef2in
    depends_on:
      - influxdb
    environment:
      APP_SECRETS_FILE: /run/secrets/app-secrets
      INFLUX_TOKEN_FILE: /run/secrets/influxdb-token
    env_file:
      - ./.env
    secrets:
      - app-secrets
      - influxdb-token
    networks:
      - internal_network

  influxdb:
    image: influxdb:2
    container_name: influxdb
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: admin
      DOCKER_INFLUXDB_INIT_PASSWORD: admin123
      DOCKER_INFLUXDB_INIT_ORG: nelara
      DOCKER_INFLUXDB_INIT_BUCKET: flotten
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN_FILE: /run/secrets/influxdb-token
    secrets:
      - influxdb-token
    volumes:
      - type: volume
        source: influxdb-data
        target: /var/lib/influxdb2
      - type: volume
        source: influxdb-config
        target: /etc/influxdb2
    networks:
      - internal_network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - influxdb
    networks:
      - internal_network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
#    networks:
#      - internal_network

networks:
  internal_network:
    internal: true

secrets:
  app-secrets:
    file: ./.app-secrets
  influxdb-token:
    file: ./.influxdb-token

volumes:
  influxdb-data:
  influxdb-config:
